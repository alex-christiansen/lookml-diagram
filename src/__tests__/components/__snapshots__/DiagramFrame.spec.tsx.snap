// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DiagramFrame /> default loading 1`] = `
"<Layout hasAside={true} height=\\"100%\\">
  <Styled(Aside) width=\\"50px\\" py=\\"xxsmall\\" pr=\\"xsmall\\">
    <SpaceVertical style={{...}} alignItems=\\"center\\" gap=\\"xsmall\\" ml=\\"xxsmall\\">
      <IconButton icon={{...}} label=\\"Settings\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: toggleSettings]} toggle={true} style={{...}} />
      <IconButton icon={{...}} label=\\"View Options\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: toggleViewOptions]} toggle={false} style={{...}} />
      <IconButton icon={{...}} label=\\"Diagram Help\\" tooltipPlacement=\\"right\\" id=\\"diagram-help-btn\\" size=\\"large\\" onClick={[Function: toggleHelp]} toggle={false} style={{...}} />
    </SpaceVertical>
  </Styled(Aside)>
  <DiagramSettings modelPathName=\\"test\\" explorePathName=\\"test_explore\\" modelDetails={{...}} exploreList={[undefined]} modelDetail={{...}} selectionInfo={{...}} currentExplore={[undefined]} diagramExplore={[undefined]} setSelectionInfo={[Function: bound _dispatchAction]} setViewVisible={[Function: bound _dispatchAction]} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} />
  <Styled(Section)>
    <DiagramHeader currentExplore={[undefined]} selectionInfo={{...}} toggleExploreInfo={[Function: toggleExploreInfo]} />
    <Layout hasAside={true} height=\\"100%\\" id=\\"DiagramStage\\">
      <DiagramCanvas modelDetail={{...}} unfilteredModels={{...}} pathModelName=\\"test\\" pathExploreName=\\"test_explore\\" currentDimensions={[undefined]} zoomFactor={0.5} reload={false} minimapUntoggled={true} minimapEnabled={false} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setReload={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} explore={[undefined]} selectionInfo={{...}} setSelectionInfo={[Function: bound _dispatchAction]} hiddenToggle={true} displayFieldType=\\"all\\" viewVisible={{...}} viewPosition={{...}} />
    </Layout>
  </Styled(Section)>
</Layout>"
`;

exports[`<DiagramFrame /> should help section 1`] = `
"<Layout hasAside={true} height=\\"100%\\">
  <Styled(Aside) width=\\"50px\\" py=\\"xxsmall\\" pr=\\"xsmall\\">
    <SpaceVertical style={{...}} alignItems=\\"center\\" gap=\\"xsmall\\" ml=\\"xxsmall\\">
      <IconButton icon={{...}} label=\\"Settings\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: toggleSettings]} toggle={false} style={{...}} />
      <IconButton icon={{...}} label=\\"View Options\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: toggleViewOptions]} toggle={false} style={{...}} />
      <IconButton icon={{...}} label=\\"Diagram Help\\" tooltipPlacement=\\"right\\" id=\\"diagram-help-btn\\" size=\\"large\\" onClick={[Function: toggleHelp]} toggle={true} style={{...}} />
    </SpaceVertical>
  </Styled(Aside)>
  <HelpPanel />
  <Styled(Section)>
    <DiagramHeader currentExplore={[undefined]} selectionInfo={{...}} toggleExploreInfo={[Function: toggleExploreInfo]} />
    <Layout hasAside={true} height=\\"100%\\" id=\\"DiagramStage\\">
      <DiagramCanvas modelDetail={{...}} unfilteredModels={{...}} pathModelName=\\"test\\" pathExploreName=\\"test_explore\\" currentDimensions={[undefined]} zoomFactor={0.5} reload={false} minimapUntoggled={true} minimapEnabled={false} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setReload={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} explore={[undefined]} selectionInfo={{...}} setSelectionInfo={[Function: bound _dispatchAction]} hiddenToggle={true} displayFieldType=\\"all\\" viewVisible={{...}} viewPosition={{...}} />
    </Layout>
  </Styled(Section)>
</Layout>"
`;

exports[`<DiagramFrame /> should settings section 1`] = `
"<Layout hasAside={true} height=\\"100%\\">
  <Styled(Aside) width=\\"50px\\" py=\\"xxsmall\\" pr=\\"xsmall\\">
    <SpaceVertical style={{...}} alignItems=\\"center\\" gap=\\"xsmall\\" ml=\\"xxsmall\\">
      <IconButton icon={{...}} label=\\"Settings\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: toggleSettings]} toggle={false} style={{...}} />
      <IconButton icon={{...}} label=\\"View Options\\" tooltipPlacement=\\"right\\" size=\\"large\\" onClick={[Function: toggleViewOptions]} toggle={false} style={{...}} />
      <IconButton icon={{...}} label=\\"Diagram Help\\" tooltipPlacement=\\"right\\" id=\\"diagram-help-btn\\" size=\\"large\\" onClick={[Function: toggleHelp]} toggle={false} style={{...}} />
    </SpaceVertical>
  </Styled(Aside)>
  <Styled(Section)>
    <DiagramHeader currentExplore={[undefined]} selectionInfo={{...}} toggleExploreInfo={[Function: toggleExploreInfo]} />
    <Layout hasAside={true} height=\\"100%\\" id=\\"DiagramStage\\">
      <DiagramCanvas modelDetail={{...}} unfilteredModels={{...}} pathModelName=\\"test\\" pathExploreName=\\"test_explore\\" currentDimensions={[undefined]} zoomFactor={0.5} reload={false} minimapUntoggled={true} minimapEnabled={false} setZoomFactor={[Function: bound _dispatchAction]} setViewPosition={[Function: bound _dispatchAction]} setReload={[Function: bound _dispatchAction]} setMinimapUntoggled={[Function: bound _dispatchAction]} setMinimapEnabled={[Function: bound _dispatchAction]} explore={[undefined]} selectionInfo={{...}} setSelectionInfo={[Function: bound _dispatchAction]} hiddenToggle={true} displayFieldType=\\"all\\" viewVisible={{...}} viewPosition={{...}} />
    </Layout>
  </Styled(Section)>
</Layout>"
`;
